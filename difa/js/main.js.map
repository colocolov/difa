{"version":3,"sources":["counter.js","dinam-adap.js","main-slider.js","mini-slider.js","nav.js","portfolio-slider.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjfile":"main.js","sourcesContent":["// scroll\r\nconst findMe = document.querySelector(\".main-servicii\");\r\nif (findMe) {\r\n\r\n  // let eventStatus = false;\r\n\r\n  const isInViewport = function (elem) {\r\n    const distance = elem.getBoundingClientRect(); // оригинал\r\n    // console.log(elem.getBoundingClientRect());\r\n    // console.log(\"Top - \" + distance.top);\r\n    // console.log(\"Left - \" + distance.left);\r\n    // console.log(\"Right - \" + distance.right);\r\n    // console.log(\"Bottom - \" + distance.bottom);\r\n    // console.log(elem.clientHeight * 0.334);\r\n    // console.log(distance.top + document.documentElement.clientHeight);\r\n    return (\r\n      distance.top <= (elem.clientHeight * 0.334)\r\n      // &&\r\n      // distance.left >= 0 &&\r\n      // distance.bottom <= \r\n      // (distance.top + document.documentElement.clientHeight) \r\n      // distance.right <=\r\n      // (window.innerWidth || document.documentElement.clientWidth)\r\n      );\r\n  };\r\n\r\n  window.addEventListener('scroll', function(event) {\r\n    // console.log(isInViewport(findMe));\r\n    if (isInViewport(findMe)) {\r\n      // console.log(isInViewport(findMe));\r\n      // console.log('i see');\r\n      // if (!eventStatus) {\r\n        // animate count scriprt\r\n        const dataCounters = document.querySelectorAll(\".main-servicii__count\");\r\n        // let interval = 1500;\r\n\r\n        dataCounters.forEach((item) => {\r\n          // console.log(item);\r\n          let interval = parseInt(item.getAttribute(\"data-time\")) * 500;\r\n          let startValue = parseInt(item.getAttribute(\"data-min\"));\r\n          let endValue = parseInt(item.getAttribute(\"data-max\"));\r\n          let duration = Math.floor(interval / (endValue - startValue));\r\n          // let duration = parseInt(item.getAttribute(\"data-time\")) * 100;\r\n          // let duration = Math.floor(interval / endValue);\r\n          // console.log(duration);\r\n\r\n          let counter = setInterval(function () {\r\n            startValue += 1;\r\n            item.textContent = startValue;\r\n            if (startValue == endValue) {\r\n              clearInterval(counter);\r\n            }\r\n          }, duration);\r\n\r\n        });\r\n      //   eventStatus = true;\r\n      // }\r\n    }\r\n  }, false);\r\n\r\n  // window.addEventListener(\"scroll\", onScroll);\r\n  // document.body.addEventListener(\"touchmove\", onScroll);\r\n\r\n\r\n  // function onEntry(entry) {\r\n  //   entry.forEach(change => {\r\n  //     if (change.isIntersecting) {\r\n  //       // change.target.classList.add('element-show');\r\n  //       onscroll;\r\n  //     }\r\n  //   });\r\n  // }\r\n  \r\n  // let options = { threshold: [0.5] };\r\n  // let observer = new IntersectionObserver(onEntry, options);\r\n  // let elements = document.querySelectorAll('.main-servicii__info');\r\n  // for (let elm of elements) {\r\n  //   observer.observe(elm);\r\n  // }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","\"use strict\";\r\n\r\nfunction DynamicAdapt(type) {\r\n  this.type = type;\r\n}\r\n\r\nDynamicAdapt.prototype.init = function () {\r\n  const _this = this;\r\n  // массив объектов\r\n  this.оbjects = [];\r\n  this.daClassname = \"_dynamic_adapt_\";\r\n  // массив DOM-элементов\r\n  this.nodes = document.querySelectorAll(\"[data-da]\");\r\n\r\n  // наполнение оbjects объктами\r\n  for (let i = 0; i < this.nodes.length; i++) {\r\n    const node = this.nodes[i];\r\n    const data = node.dataset.da.trim();\r\n    const dataArray = data.split(\",\");\r\n    const оbject = {};\r\n    оbject.element = node;\r\n    оbject.parent = node.parentNode;\r\n    оbject.destination = document.querySelector(dataArray[0].trim());\r\n    оbject.breakpoint = dataArray[1] ? dataArray[1].trim() : \"767\";\r\n    оbject.place = dataArray[2] ? dataArray[2].trim() : \"last\";\r\n    оbject.index = this.indexInParent(оbject.parent, оbject.element);\r\n    this.оbjects.push(оbject);\r\n  }\r\n\r\n  this.arraySort(this.оbjects);\r\n\r\n  // массив уникальных медиа-запросов\r\n  this.mediaQueries = Array.prototype.map.call(\r\n    this.оbjects,\r\n    function (item) {\r\n      return (\r\n        \"(\" +\r\n        this.type +\r\n        \"-width: \" +\r\n        item.breakpoint +\r\n        \"px),\" +\r\n        item.breakpoint\r\n      );\r\n    },\r\n    this\r\n  );\r\n  this.mediaQueries = Array.prototype.filter.call(\r\n    this.mediaQueries,\r\n    function (item, index, self) {\r\n      return Array.prototype.indexOf.call(self, item) === index;\r\n    }\r\n  );\r\n\r\n  // навешивание слушателя на медиа-запрос\r\n  // и вызов обработчика при первом запуске\r\n  for (let i = 0; i < this.mediaQueries.length; i++) {\r\n    const media = this.mediaQueries[i];\r\n    const mediaSplit = String.prototype.split.call(media, \",\");\r\n    const matchMedia = window.matchMedia(mediaSplit[0]);\r\n    const mediaBreakpoint = mediaSplit[1];\r\n\r\n    // массив объектов с подходящим брейкпоинтом\r\n    const оbjectsFilter = Array.prototype.filter.call(\r\n      this.оbjects,\r\n      function (item) {\r\n        return item.breakpoint === mediaBreakpoint;\r\n      }\r\n    );\r\n    matchMedia.addListener(function () {\r\n      _this.mediaHandler(matchMedia, оbjectsFilter);\r\n    });\r\n    this.mediaHandler(matchMedia, оbjectsFilter);\r\n  }\r\n};\r\n\r\nDynamicAdapt.prototype.mediaHandler = function (matchMedia, оbjects) {\r\n  if (matchMedia.matches) {\r\n    for (let i = 0; i < оbjects.length; i++) {\r\n      const оbject = оbjects[i];\r\n      оbject.index = this.indexInParent(оbject.parent, оbject.element);\r\n      this.moveTo(оbject.place, оbject.element, оbject.destination);\r\n    }\r\n  } else {\r\n    for (let i = 0; i < оbjects.length; i++) {\r\n      const оbject = оbjects[i];\r\n      if (оbject.element.classList.contains(this.daClassname)) {\r\n        this.moveBack(оbject.parent, оbject.element, оbject.index);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// Функция перемещения\r\nDynamicAdapt.prototype.moveTo = function (place, element, destination) {\r\n  element.classList.add(this.daClassname);\r\n  if (place === \"last\" || place >= destination.children.length) {\r\n    destination.insertAdjacentElement(\"beforeend\", element);\r\n    return;\r\n  }\r\n  if (place === \"first\") {\r\n    destination.insertAdjacentElement(\"afterbegin\", element);\r\n    return;\r\n  }\r\n  destination.children[place].insertAdjacentElement(\"beforebegin\", element);\r\n};\r\n\r\n// Функция возврата\r\nDynamicAdapt.prototype.moveBack = function (parent, element, index) {\r\n  element.classList.remove(this.daClassname);\r\n  if (parent.children[index] !== undefined) {\r\n    parent.children[index].insertAdjacentElement(\"beforebegin\", element);\r\n  } else {\r\n    parent.insertAdjacentElement(\"beforeend\", element);\r\n  }\r\n};\r\n\r\n// Функция получения индекса внутри родителя\r\nDynamicAdapt.prototype.indexInParent = function (parent, element) {\r\n  const array = Array.prototype.slice.call(parent.children);\r\n  return Array.prototype.indexOf.call(array, element);\r\n};\r\n\r\n// Функция сортировки массива по breakpoint и place\r\n// по возрастанию для this.type = min\r\n// по убыванию для this.type = max\r\nDynamicAdapt.prototype.arraySort = function (arr) {\r\n  if (this.type === \"min\") {\r\n    Array.prototype.sort.call(arr, function (a, b) {\r\n      if (a.breakpoint === b.breakpoint) {\r\n        if (a.place === b.place) {\r\n          return 0;\r\n        }\r\n\r\n        if (a.place === \"first\" || b.place === \"last\") {\r\n          return -1;\r\n        }\r\n\r\n        if (a.place === \"last\" || b.place === \"first\") {\r\n          return 1;\r\n        }\r\n\r\n        return a.place - b.place;\r\n      }\r\n\r\n      return a.breakpoint - b.breakpoint;\r\n    });\r\n  } else {\r\n    Array.prototype.sort.call(arr, function (a, b) {\r\n      if (a.breakpoint === b.breakpoint) {\r\n        if (a.place === b.place) {\r\n          return 0;\r\n        }\r\n\r\n        if (a.place === \"first\" || b.place === \"last\") {\r\n          return 1;\r\n        }\r\n\r\n        if (a.place === \"last\" || b.place === \"first\") {\r\n          return -1;\r\n        }\r\n\r\n        return b.place - a.place;\r\n      }\r\n\r\n      return b.breakpoint - a.breakpoint;\r\n    });\r\n    return;\r\n  }\r\n};\r\n\r\nconst da = new DynamicAdapt(\"max\");\r\nda.init();\r\n","// слайдер на главной\r\nconst headerSlider = new Swiper(\".main-slider\", {\r\n  loop: true,\r\n  autoplay: {\r\n    delay: 5000,\r\n  },\r\n  speed: 800,\r\n  navigation: {\r\n    nextEl: \".main-slider__btn-next\",\r\n    prevEl: \".main-slider__btn-prev\",\r\n    clickable: true,\r\n  },\r\n  effect: \"fade\",\r\n  fadeEffect: {\r\n    crossFade: true,\r\n  },\r\n});\r\n//----- END\r\n","// слайдер на главной\r\nconst miniSlider = new Swiper(\".mini-slider__slider-wrapper\", {\r\n  loop: true,\r\n  autoplay: {\r\n    delay: 3000,\r\n  },\r\n  speed: 800,\r\n  navigation: {\r\n    nextEl: \".mini-slider__btn-next\",\r\n    prevEl: \".mini-slider__btn-prev\",\r\n    clickable: true,\r\n  },\r\n  effect: \"fade\",\r\n  fadeEffect: {\r\n    crossFade: true,\r\n  },\r\n});\r\n","// мобильное меню\r\n\r\n// проверка, является ли уствройство мобильным\r\nconst isMobile = {\r\n  Android: function () {\r\n    return navigator.userAgent.match(/Android/i);\r\n  },\r\n  BlackBerry: function () {\r\n    return navigator.userAgent.match(/BlackBerry/i);\r\n  },\r\n  iOS: function () {\r\n    return navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n  },\r\n  Opera: function () {\r\n    return navigator.userAgent.match(/Opera Mini/i);\r\n  },\r\n  Windows: function () {\r\n    return navigator.userAgent.match(/IEMobile/i);\r\n  },\r\n  any: function () {\r\n    return (\r\n      isMobile.Android() ||\r\n      isMobile.BlackBerry() ||\r\n      isMobile.iOS() ||\r\n      isMobile.Opera() ||\r\n      isMobile.Windows()\r\n    );\r\n  },\r\n};\r\n\r\nif (isMobile.any()) {\r\n  // document.querySelector('html').classList.add('_touch');\r\n  document.body.classList.add(\"_touch\");\r\n}\r\n\r\n//выпадающее меню для мобильных устройств\r\ndocument.addEventListener(\"click\", documentActions);\r\n\r\nfunction documentActions(e) {\r\n  const targetElement = e.target;\r\n  if (window.innerWidth > 768 && isMobile.any()) {\r\n    if (targetElement.classList.contains(\"menu__link\")) {\r\n      // console.log(\"ehhh\");\r\n      targetElement.closest(\".menu__item\").classList.toggle(\"_hover\");\r\n    }\r\n    if (\r\n      !targetElement.closest(\".menu__item\") &&\r\n      document.querySelectorAll(\".menu__item._hover\").length > 0\r\n    ) {\r\n      var element = document.querySelector(\".menu__item._hover\");\r\n      element.classList.remove(\"_hover\");\r\n    }\r\n  }\r\n\r\n  if (window.innerWidth > 768 && isMobile.any()) {\r\n    if (\r\n      targetElement.closest(\".menu__arrow\") &&\r\n      !targetElement.closest(\".sub-menu\")\r\n    ) {\r\n      e.preventDefault();\r\n      targetElement.closest(\".menu__item\").classList.toggle(\"_hover\");\r\n    }\r\n    if (\r\n      !targetElement.closest(\".menu__item\") &&\r\n      document.querySelectorAll(\".menu__item._hover\").length > 0\r\n    ) {\r\n      var element = document.querySelector(\".menu__item._hover\");\r\n      element.classList.remove(\"_hover\");\r\n    }\r\n  }\r\n}\r\n\r\n// меню бургер\r\nconst iconMenu = document.querySelector(\".menu__icon\");\r\nconst menuBody = document.querySelector(\".menu__body\");\r\nconst menuLink = document.querySelector(\".menu__item\");\r\nif (iconMenu) {\r\n  iconMenu.addEventListener(\"click\", function (e) {\r\n    document.body.classList.toggle(\"_lock\");\r\n    iconMenu.classList.toggle(\"_active\");\r\n    menuBody.classList.toggle(\"_active\");\r\n  });\r\n}\r\n// закрытие при клике\r\nmenuLink.addEventListener(\"click\", function (e) {\r\n  // console.log(\"yes\");\r\n  document.body.classList.remove(\"_lock\");\r\n  iconMenu.classList.remove(\"_active\");\r\n  menuBody.classList.remove(\"_active\");\r\n});\r\n","// var portfolioSliderThumb = new Swiper(\".portfolio-slider--thumb\", {\n//   // loop: true,\n//   spaceBetween: 57,\n//   slidesPerView: 4,\n//   // slidesPerGroup: 4,\n//   freeMode: true,\n//   // watchSlidesProgress: true,\n//   navigation: {\n//     nextEl: \".portfolio-slider__btn-thumb-next\",\n//     prevEl: \".portfolio-slider__btn-thumb-prev\",\n//     clickable: true,\n//   },\n// });\n// var portfolioSliderPreview = new Swiper(\".portfolio-slider--preview\", {\n//   // loop: true,\n//   slidesPerView: 1,\n//   slideToClickedSlide: true,\n//   // spaceBetween: 10,\n//   speed: 800,\n//   effect: \"fade\",\n//   fadeEffect: {\n//     crossFade: true,\n//   },\n//   navigation: {\n//     nextEl: \".portfolio-slider__btn-next\",\n//     prevEl: \".portfolio-slider__btn-prev\",\n//     clickable: true,\n//   },\n//   pagination: {\n//     el: \".swiper-pagination\",\n//   },\n//   thumbs: {\n//     swiper: portfolioSliderThumb,\n//   },\n// });\n"]}